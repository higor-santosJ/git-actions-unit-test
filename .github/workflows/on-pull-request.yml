name: Validação - Testes Unitários

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:

  eslint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Run eslint
        run: npm run lint

  unit-test:
    needs: eslint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: |
          if ! npm run test:unit  -- --reporters=jest-junit; then
            exit 0
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: ${{ github.workspace }}/report.xml

  analyze-test-results:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: report

      - name: Check Jest failures
        run: |
          failures=$(grep -c "<failure" ${{ github.workspace }}/report.xml)
          if [[ $failures -gt 0 ]]; then
            echo "Jest test failures found!"
            echo "tests-failed=true" >> $GITHUB_ENV
            exit 0
          else
            echo "Jest test passed!"
            echo "tests-failed=false" >> $GITHUB_ENV
            exit 0
          fi

  approve-pr:
    needs: analyze-test-results
    runs-on: ubuntu-latest
    if: ${{ needs.analyze-test-results.outputs.tests-failed == 'false' }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Aprovando Pull Request
        run: |
          gh pr review $PR_NUMBER --approve

  unlock-pr:
    needs: approve-pr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Desbloqueando Pull Request
        run: |
          gh pr unlock $PR_NUMBER

  request-changes-pr:
    needs: analyze-test-results
    runs-on: ubuntu-latest
    if: ${{ needs.analyze-test-results.outputs.tests-failed == 'true'  }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Requisitando mudanças ao Pull Request
        run: |
          gh pr review $PR_NUMBER --request-changes --body "Necessário corrigir os testes."

  lock-pr:
    needs: request-changes-pr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Bloqueando Pull Request
        run: |
          
          if ! gh pr lock $PR_NUMBER; then
            exit 0
          fi
