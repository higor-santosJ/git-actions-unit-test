name: Validação - Testes Unitários

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development
  # schedule:
  #   - cron: '0 7 * * *'

jobs:
  testes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test:unit

      # - name: Bloquear Merge se os testes falharem
      #   if: ${{ steps.test_status.outcome != 'success' }}
      #   run: |
      #     echo "${{ steps.test_status.outcome }} Os testes falharam. O merge não pode ser realizado."
      #     exit 1
  verificar_testes:
    name: Verificar Status dos Testes
    needs: testes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Verificar Status dos Testes
        id: test_status
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const checkSuiteResponse = await github.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
            });

            const checkSuites = checkSuiteResponse.data.check_suites;
            const testSuite = checkSuites.find((suite) =>
              suite.app.slug.includes('github-actions')
            );

            return {
              conclusion: testSuite.conclusion
            };

      - name: Bloquear Merge se os testes falharem
        run: |
          if [ "${{ steps.test_status.outputs.conclusion }}" != "success" ]; then
            echo "Os testes falharam. O merge não pode ser realizado."
            exit 1
          fi